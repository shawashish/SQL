CREATE Table if not exists World(
name VARCHAR(30),
continent VARCHAR(20),
area int,
population int,
gdp int,
constraint pk PRIMARY KEY(name)
);

ALTER TABLE World MODIFY gdp BIGINT;

INSERT into World VALUES
('Afghanistan', 'Asia', 652230, 25500100, 20343000000),
('Albania', 'Europe', 28748, 2831741, 12960000000),
('Algeria', 'Africa', 2381741, 37100000, 188681000000),
('Andorra', 'Europe', 468, 78115, 3712000000),
('Angola', 'Africa', 1246700, 20609294, 100990000000);

SELECT name,population,area FROM World where area >=3000000 or population >= 25000000;

CREATE Table if not exists Customer(
id int not NULL,
name VARCHAR(20),
refree_id int,
constraint pk PRIMARY KEY(id)
);

INSERT INTO Customer VALUES
(1, 'Will', null),
(2, 'Jane', null),
(3, 'Alex', 2),
(4, 'Bill', null),
(5, 'Zack', 1),
(6, 'Mark', 2);

SELECT name from Customer where refree_id != 2 or refree_id is NULL;

CREATE Table if not exists Customers(
id int not NULL,
name VARCHAR(20),
constraint pk PRIMARY KEY(id)
);

CREATE Table if not exists Orders(
id int not NULL,
customerId int,
constraint pk PRIMARY KEY(id),
constraint fk Foreign Key (customerId) REFERENCES Customers(id)
);

insert into Customers VALUES
(1, 'Joe'),
(2, 'Henry'),
(3, 'Sam'),
(4, 'Max');

INSERT into Orders VALUES
(1, 3),
(2, 1);

select name from Customers where id not in (select customerId from Orders);


CREATE Table if not exists Employee(
employee_id int not NULL,
team_id int,
constraint pk PRIMARY KEY(employee_id)
);

INSERT into Employee VALUES
(1, 8),
(2, 8),
(3, 8),
(4, 7),
(5, 9),
(6, 9);

SELECT employee_id,count(team_id)
over(PARTITION BY team_id) as team_size
from Employee
ORDER BY employee_id;

CREATE Table if not exists Person
(id int NOT NULL,
name VARCHAR(30),
phone_number VARCHAR(20),
constraint pk PRIMARY KEY(id)
);

CREATE Table if not exists Country(
name VARCHAR(30),
country_code VARCHAR(3),
constraint pk PRIMARY KEY(country_code)
);

CREATE Table if not exists Calls
(caller_id int NOT NULL,
callee_id int,
duration int
);

insert into Person VALUES
(3, 'Jonathan', '051-1234567'),
(12, 'Elvis', '051-7654321'),
(1, 'Moncef', '212-1234567'),
(2, 'Maroua', '212-6523651'),
(7, 'Meir', '972-1234567'),
(9, 'Rachel', '972-0011100');

INSERT into Country VALUES
('Peru', 51),
('Israel', 972),
('Morocco', 212),
('Germany', 49),
('Ethiopia', 251);

INSERT INTO Calls values
(1, 9, 33),
(2, 9, 4),
(1, 2, 59),
(3, 12, 102),
(3, 12, 330),
(12, 3, 5),
(7, 9, 13),
(7, 1, 3),
(9, 7, 1),
(1, 7, 7);

select sum(duration)/(select count(*) from Country) as global_average from Calls;

update Country set country_code = '049' where name = 'Germany';
update Country set country_code = '051' where name = 'Peru';
select c.name from Person p inner join
Country c on left(p.phone_number,3) = c.country_code
inner join (
select caller_id as id, duration from Calls
UNION ALL
select callee_id as id, duration from Calls) cal
on p.id = cal.id
group by c.name
having avg(cal.duration) > (select avg(duration) FROM Calls);



CREATE Table if not exists Activity(
player_id int not NULL,
device_id int,
event_date date,
games_played int,
constraint pk PRIMARY KEY(player_id,event_date)
);

insert into Activity VALUES
(1, 2, '2016-03-01', 5),
(1, 2, '2016-05-02', 6),
(2, 3, '2017-06-25', 1),
(3, 1, '2016-03-02', 0),
(3, 4, '2018-07-03', 5);


select player_id,device_id from (
select player_id,device_id,
row_number() OVER(PARTITION BY player_id) as rn
from Activity) a
where a.rn =1;

CREATE Table if not exists Orders(
order_number int NOT NULL,
customer_number int,
constraint pk PRIMARY KEY(order_number)
);

INSERT into Orders VALUES
(1, 1),
(2, 2),
(3,3),
(4, 3);

select customer_number from (
select customer_number,
RANK() over(PARTITION BY customer_number) as rn
from Orders) a
ORDER BY a.rn desc limit 1;

INSERT into Orders VALUES
(5, 2);

SELECT * FROM Orders;
with cte as (
select customer_number,
RANK() over(PARTITION BY customer_number ORDER BY order_number) as rn
from Orders)
select customer_number from cte where rn = (select max(rn) from cte);

CREATE Table if not exists Cinema(
seat_id int not NULL,
free BOOLEAN,
constraint pk PRIMARY KEY(seat_id)
);

insert into Cinema VALUES
(1, 1),
(2, 0),
(3, 1),
(4, 1),
(5, 1);

with cte as (
select seat_id,
lead(seat_id,1,0) over() as next_seat
from Cinema
ORDER BY seat_id)
select c.seat_id from Cinema c
inner join cte ct
on c.seat_id = ct.next_seat
where c.free = 1;

CREATE Table if not exists SalesPerson(
sales_id int NOT NULL,
name VARCHAR(20),
salary int,
commission_rate int,
hire_date DATE,
constraint pk PRIMARY KEY(sales_id)
);

CREATE Table if not exists Company(
com_id int,
name VARCHAR(20),
city VARCHAR(20),
constraint pk PRIMARY KEY(com_id)
);

CREATE Table if not exists Orders(
order_id int not NULL,
order_date DATE,
com_id int,
sales_id int,
amount int,
constraint pk PRIMARY KEY(name),
constraint fk1 Foreign Key (com_id) REFERENCES Company(com_id),
constraint fk2 Foreign Key (sales_id) REFERENCES SalesPerson(sales_id)
);

insert into SalesPerson VALUES
(1, 'John', 100000, 6, STR_TO_DATE('4/1/2006','%m/%d/%Y'));
insert into SalesPerson VALUES
(2, 'Amy', 12000, 5, STR_TO_DATE('5/1/2010','%m/%d/%Y')),
(3, 'Mark', 65000, 12, STR_TO_DATE('12/25/2008','%m/%d/%Y')),
(4, 'Pam', 25000, 25, STR_TO_DATE('1/1/2005','%m/%d/%Y')),
(5, 'Alex', 5000, 10, STR_TO_DATE('2/3/2007','%m/%d/%Y'));

SELECT * FROM SalesPerson;

