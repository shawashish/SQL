CREATE Table if not exists city(
id int not NULL,
name VARCHAR(17),
countrycode VARCHAR(3),
district VARCHAR(20),
population int DEFAULT 0,
constraint pk PRIMARY KEY(id)
);

select * from city;

drop TABLE city;

insert into city (id,name,countrycode,district,population) VALUES
(6,'Rotterdam','NLD','Zuid-Holland',null),
(19,'Zaanstad','NLD','Noord-Holland',135621),
(214,'Porto Alegre','BRA','Rio Grande do Sul',1314032),
(397,'Lauro de Freitas','BRA','Bahia',109236),
(547,'Dobric','BGR','Varna',100399),
(552,'Bujumbura','BDI','Bujumbura',300000);

INSERT INTO city VALUES
(553,'Bujumbura','USA','New York',300000);

INSERT INTO city VALUES
(1661,'Kolkata','IND','New Town',300000);


INSERT INTO city VALUES
(1662,'Beijing','JPN','Holland',300000);

select * from city where countrycode = 'USA' and population > 100000;

select name from city where countrycode = 'USA' and population > 120000;

select * from city;

select * from city where id = 1661;

select * from city where countrycode = 'JPN';

SELECT name from city where countrycode = 'JPN';

CREATE Table if not exists station(
id int not NULL,
city VARCHAR(21),
state VARCHAR(2),
lat_n int,
long_w int,
constraint pk PRIMARY KEY(id)
);

INSERT INTO station VALUES
(1662,'Kolkata','WB',98,105);


INSERT INTO station VALUES
(1661,'Jaipur','RJ',97,111);

INSERT INTO station VALUES
(1663,'Jaipur','RG',99,112);


INSERT INTO station VALUES
(988,'Mullan','ID',143,154),
(987,'Hartland','MI',136,107),
(985,'Winslow','AR',126,126),
(983,'Patriot','IN',82,46),
(986,'Holbrook','AZ',134,103),
(999,'Hol','HO',133,102),
(911,'Win','WI',165,111);;;

SELECT * from station;

SELECT city,state from station;

select distinct(city) from station where mod(id,2) = 0;

select count(*) - count(DISTINCT(city)) as Net_Count from station;

select city, LENGTH(city) as length from station ORDER BY length(city) asc, city asc limit 1;
select city, LENGTH(city) as length from station ORDER BY LENGTH(city) desc,city asc limit 1;


SELECT distinct(city) from station where left(city,1) in ('A','E','I','O','U');

SELECT distinct(city) from station where substr(city,1,1) in ('A','E','I','O','U');

SELECT distinct(city) from station where right(city,1) in ('A','E','I','O','U');

SELECT distinct(city) from station where substr(city,-1,1) in ('A','E','I','O','U');

SELECT distinct(city) from station where left(city,1) not in ('A','E','I','O','U');

SELECT distinct(city) from station where right(city,1) not in ('A','E','I','O','U');


SELECT distinct(city) from station where left(city,1) not in ('A','E','I','O','U')
or RIGHT(city,1) not in ('A','E','I','O','U');

SELECT distinct(city) from station where left(city,1) not in ('A','E','I','O','U')
and RIGHT(city,1) not in ('A','E','I','O','U');


CREATE Table if not exists Product(
product_id int not NULL,
product_name VARCHAR(20),
unit_price int,
constraint pk PRIMARY KEY(product_id)
);

CREATE Table if not exists Sales(
seller_id int not NULL,
product_id int,
buyer_id int,
sale_date DATE,
quantity int,
price int,
constraint fk Foreign Key (product_id) REFERENCES Product(product_id)
);

insert into Product VALUES
(1,'S8',1000),
(2,'G4',800),
(3,'iPhone',1400);

SELECT * FROM Product;

INSERT INTO Sales VALUES
(1, 1, 1, '2019-01-21', 2, 2000),
(1, 2, 2, '2019-02-17', 1, 800),
(2, 2, 3, '2019-06-02', 1, 800),
(3, 3, 4,'2019-05-13', 2, 2800);

SELECT * FROM Sales;

select product_id,product_name
from Product
where product_id not in(
select product_id from Sales
where sale_date < '2019-01-01' or sale_date > '2019-03-31');

CREATE Table if not exists Views(
article_id int not NULL,
author_id int,
viewer_id int,
view_date DATE
);

INSERT into Views values
(1, 3, 5, '2019-08-01'),
(1 ,3, 6, '2019-08-02'),
(2, 7, 7, '2019-08-01'),
(2, 7, 6, '2019-08-02'),
(4, 7, 1, '2019-07-22'),
(3, 4, 4, '2019-07-21'),
(3, 4, 4, '2019-07-21');

SELECT * FROM Views;

select distinct(author_id) as id
from Views
where author_id = viewer_id
order by author_id;

CREATE Table if not exists Delivery(
delivery_id int not NULL,
customer_id int,
order_date DATE,
customer_pref_delivery_date DATE,
constraint pk PRIMARY KEY(delivery_id)
);



INSERT into Delivery VALUES
(1, 1, '2019-08-01', '2019-08-02'),
(2, 5, '2019-08-02', '2019-08-02'),
(3, 1, '2019-08-11', '2019-08-11'),
(4, 3, '2019-08-24', '2019-08-26'),
(5, 4, '2019-08-21', '2019-08-22'),
(6, 2, '2019-08-11', '2019-08-13');

select * FROM Delivery;


with cte As
(select count(delivery_id) as immediate_orders from Delivery where order_date = customer_pref_delivery_date)
select round(100*(select immediate_orders from cte)/count(delivery_id),2) as immediate_percentage from Delivery;

CREATE Table if not exists Ads(
ad_id int not NULL,
user_id int,
action ENUM('Clicked','Viewed','Ignored'),
constraint pk PRIMARY KEY(ad_id,user_id)
);

insert into Ads VALUES
(1, 1, 'Clicked'),
(2, 2, 'Clicked'),
(3, 3, 'Viewed'),
(5, 5, 'Ignored'),
(1, 7, 'Ignored'),
(2, 7, 'Viewed'),
(3, 5, 'Clicked'),
(1, 4, 'Viewed'),
(2, 11, 'Viewed'),
(1, 2, '(Clicked');

select * FROM Ads;

select ad_id,
    ifnull(round(sum(action ='Clicked')/sum(action !='Ignored') *100,2),0) ctr
from Ads
group by ad_id
order by ctr desc, ad_id;

CREATE Table if not exists Employee(
employee_id int not NULL,
team_id int,
constraint pk PRIMARY KEY(employee_id)
);

INSERT INTO Employee VALUES
(1, 8),
(2, 8),
(3,8),
(4, 7),
(5, 9),
(6, 9);

SELECT * FROM Employee;

with cte as(
select team_id,count(team_id) as team_size
from Employee
GROUP BY team_id
order by team_id)
select e.employee_id,f.team_size
from Employee e
inner join cte f
on e.team_id = f.team_id
order by e.employee_id;

select employee_id,count(team_id)
over(PARTITION BY team_id)
from Employee
order by employee_id;


select ct.country_name,
case when avg(wt.weather_state) <= 15 then 'Cold'
    when avg(wt.weather_state) >=25 then 'Hot'
    else 'Warm'
    END as weather_type
from Weather wt
inner join Countries ct
on wt.country_id = ct.country_id
where wt.day BETWEEN '2019-11-01' and '2019-11-30'
group by ct.country_name;


select pr.product_id,
round(sum(us.units* pr.price)/SUM(us.units),2) as average_price
from Prices pr
left join UnitsSold us
on pr.product_id = us.product_id
where us.purchase_date BETWEEN pr.start_date and pr.end_date
group by pr.product_id;


CREATE Table if not exists Activity(
player_id int not NULL,
device_id int,
event_date date,
games_played int,
constraint pk PRIMARY KEY(player_id,event_date)
);

insert into Activity VALUES
(1, 2, '2016-03-01', 5),
(1, 2, '2016-05-02', 6),
(2, 3, '2017-06-25', 1),
(3, 1, '2016-03-02', 0),
(3, 4, '2018-07-03', 5);

with cte as(
select distinct(player_id),
event_date,
row_number() OVER(PARTITION BY player_id) as rn
from Activity)
select player_id,event_date from cte where rn = 1;

with cte as(
select player_id,device_id,
row_number() OVER(PARTITION BY player_id) as rn
from Activity)
select player_id,device_id from cte where rn = 1;

CREATE Table if not exists Products(
product_id int not NULL,
product_name VARCHAR(40),
product_category VARCHAR(20),
constraint pk1 PRIMARY KEY(product_id)
);

CREATE Table if not exists Orders(
product_id int not NULL,
order_date DATE,
unit int,
constraint fk1 Foreign Key (product_id) REFERENCES Products(product_id)
);

insert into Products VALUES
(1, 'Leetcode Solutions', 'Book'),
(2, 'Jewels of Stringology', 'Book'),
(3, 'HP', 'Laptop'),
(4, 'Lenovo', 'Laptop'),
(5, 'Leetcode Kit', 'T-shirt');

INSERT INTO Orders VALUES
(1, '2020-02-05' ,60),
(1, '2020-02-10' ,70),
(2, '2020-01-18' ,30),
(2, '2020-02-11' ,80),
(3, '2020-02-17' ,2),
(3, '2020-02-24' ,3),
(4, '2020-03-01' ,20),
(4, '2020-03-04' ,30),
(4, '2020-03-04' ,60),
(5, '2020-02-25' ,50),
(5, '2020-02-27' ,50),
(5, '2020-03-01' ,50);

select pt.product_name,SUM(od.unit) as total_units
from Products pt
inner JOIN Orders od
on pt.product_id = od.product_id
where left(od.order_date,7) = '2020-02'
group by pt.product_name
having SUM(od.unit) >=100;

CREATE Table if not exists Users(
user_id int not NULL,
name VARCHAR(20),
mail VARCHAR(20),
constraint pk3 PRIMARY KEY(user_id)
);

INSERT INTO Users VALUES
(1, 'Winston', 'winston@leetcode.com'),
(2, 'Jonathan', 'jonathanisgreat'),
(3, 'Annabelle', 'bella-@leetcode.com'),
(4, 'Sally' ,'sally.come@leetcode.com'),
(5, 'Marwan', 'quarz#2020@leetcode.com'),
(6, 'David' ,'david69@gmail.com'),
(7, 'Shapiro', '.shapo@leetcode.com');

alter Table Users MODIFY mail VARCHAR(255);

select * 
from Users
where mail regexp '^[A-Za-z][A-Za-z0-9\_\.\-]*@leetcode\.com$'
